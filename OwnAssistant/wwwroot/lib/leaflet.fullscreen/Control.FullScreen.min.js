!function(e,n){"function"==typeof define&&define.amd?define("leafletFullScreen",["leaflet"],n):"object"==typeof module&&module.exports?module.exports=n(require("leaflet")):n(e.L)}("undefined"!=typeof self?self:this,o=>{"use strict";if("undefined"==typeof document)return console.warn('"window.document" is undefined; leaflet.fullscreen requires this object to access the DOM'),!1;const r=(()=>{var e=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"]],n=e[0];const t={};for(const l of e)if(l[1]in document){for(let e=0;e<l.length;e++)t[n[e]]=l[e];return t}return!1})(),t={change:r.fullscreenchange,error:r.fullscreenerror};var e={request(s,i){return new Promise((e,n)=>{const t=function(){this.off("change",t),e()}.bind(this),l=(this.on("change",t),(s=s||document.documentElement)[r.requestFullscreen](i));l instanceof Promise&&l.then(t).catch(n)})},exit(){return new Promise((e,n)=>{if(this.isFullscreen){const t=function(){this.off("change",t),e()}.bind(this),l=(this.on("change",t),document[r.exitFullscreen]());l instanceof Promise&&l.then(t).catch(n)}else e()})},on(e,n){e=t[e];e&&document.addEventListener(e,n,!1)},off(e,n){e=t[e];e&&document.removeEventListener(e,n,!1)},nativeAPI:r};return Object.defineProperties(e,{isFullscreen:{get(){return Boolean(document[r.fullscreenElement])}},isEnabled:{enumerable:!0,get(){return Boolean(document[r.fullscreenEnabled])}}}),o.Control.FullScreen=o.Control.extend({options:{position:"topleft",title:"Full Screen",titleCancel:"Exit Full Screen",forceSeparateButton:!1,forcePseudoFullscreen:!1,fullscreenElement:!1},_screenfull:e,onAdd(e){let n="leaflet-control-zoom-fullscreen",t,l="";return t=e.zoomControl&&!this.options.forceSeparateButton?e.zoomControl._container:o.DomUtil.create("div","leaflet-bar"),this.options.content?l=this.options.content:n+=" fullscreen-icon",this._createButton(this.options.title,n,l,t,this.toggleFullScreen,this),(this._map.fullscreenControl=this)._map.on("enterFullscreen exitFullscreen",this._toggleState,this),t},onRemove(){o.DomEvent.off(this.link,"click",o.DomEvent.stop).off(this.link,"click",this.toggleFullScreen,this),this._screenfull.isEnabled&&(o.DomEvent.off(this._container,this._screenfull.nativeAPI.fullscreenchange,o.DomEvent.stop).off(this._container,this._screenfull.nativeAPI.fullscreenchange,this._handleFullscreenChange,this),o.DomEvent.off(document,this._screenfull.nativeAPI.fullscreenchange,o.DomEvent.stop).off(document,this._screenfull.nativeAPI.fullscreenchange,this._handleFullscreenChange,this))},_createButton(e,n,t,l,s,i){return this.link=o.DomUtil.create("a",n,l),this.link.href="#",this.link.title=e,this.link.innerHTML=t,this.link.setAttribute("role","button"),this.link.setAttribute("aria-label",e),L.DomEvent.disableClickPropagation(l),o.DomEvent.on(this.link,"click",o.DomEvent.stop).on(this.link,"click",s,i),this._screenfull.isEnabled&&(o.DomEvent.on(l,this._screenfull.nativeAPI.fullscreenchange,o.DomEvent.stop).on(l,this._screenfull.nativeAPI.fullscreenchange,this._handleFullscreenChange,i),o.DomEvent.on(document,this._screenfull.nativeAPI.fullscreenchange,o.DomEvent.stop).on(document,this._screenfull.nativeAPI.fullscreenchange,this._handleFullscreenChange,i)),this.link},toggleFullScreen(){const e=this._map;e._exitFired=!1,e._isFullscreen?(this._screenfull.isEnabled&&!this.options.forcePseudoFullscreen?this._screenfull.exit():(o.DomUtil.removeClass(this.options.fullscreenElement||e._container,"leaflet-pseudo-fullscreen"),e.invalidateSize()),e.fire("exitFullscreen"),e._exitFired=!0,e._isFullscreen=!1):(this._screenfull.isEnabled&&!this.options.forcePseudoFullscreen?this._screenfull.request(this.options.fullscreenElement||e._container):(o.DomUtil.addClass(this.options.fullscreenElement||e._container,"leaflet-pseudo-fullscreen"),e.invalidateSize()),e.fire("enterFullscreen"),e._isFullscreen=!0)},_toggleState(){this.link.title=this._map._isFullscreen?this.options.title:this.options.titleCancel,this._map._isFullscreen?L.DomUtil.removeClass(this.link,"leaflet-fullscreen-on"):L.DomUtil.addClass(this.link,"leaflet-fullscreen-on")},_handleFullscreenChange(e){const n=this._map;e.target!==n.getContainer()||this._screenfull.isFullscreen||n._exitFired||(n.invalidateSize(),n.fire("exitFullscreen"),n._exitFired=!0,n._isFullscreen=!1)}}),o.Map.include({toggleFullscreen(){this.fullscreenControl.toggleFullScreen()}}),o.Map.addInitHook(function(){this.options.fullscreenControl&&this.addControl(o.control.fullscreen(this.options.fullscreenControlOptions))}),o.control.fullscreen=function(e){return new o.Control.FullScreen(e)},{leaflet:o}});